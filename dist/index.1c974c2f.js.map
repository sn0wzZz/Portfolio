{"mappings":"AAAA,YAAY;AAKZ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE;IACnC,sBAAsB;IACtB,SAAS,EAAE,UAAU;IACrB,IAAI,EAAE,IAAI;IAEV,wBAAwB;IACxB,UAAU,EAAE;QACV,EAAE,EAAE,oBAAoB;KACzB;IAED,oBAAoB;IACpB,UAAU,EAAE;QACV,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE,qBAAqB;KAC9B;IAED,2BAA2B;IAC3B,SAAS,EAAE;QACT,EAAE,EAAE,mBAAmB;KACxB;CACF,CAAC;AAEF,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC;AAChD,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;AAC1C,MAAM,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC;AAC/C,MAAM,SAAS,GAAG,GAAG,CAAC,qBAAqB,EAAE,CAAC,MAAM;AAGpD,MAAM,SAAS,GAAG,SAAU,OAAO,EAAE;IACnC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO;IACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAEnB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;SAErD,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;CAEjC;AAED,MAAM,WAAW,GAAG,IAAI,oBAAoB,CAAC,SAAS,EAAE;IACtD,IAAI,EAAE,IAAI;IACV,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC;CAC9B,CAAC;AAEF,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC;AAExB,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAU,CAAC,EAAE;IACjD,MAAM,QAAQ,GAAG,QAAQ,CAAC,qBAAqB,EAAE;IACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;IAErB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;IAE7C,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC;IAE3E,OAAO,CAAC,GAAG,CACT,uBAAuB,EACvB,QAAQ,CAAC,eAAe,CAAC,YAAY,EACrC,QAAQ,CAAC,eAAe,CAAC,WAAW,CACrC;IAED,YAAY;IACZ,mBAAmB;IACnB,wCAAwC;IACxC,sCAAsC;IACtC,KAAK;IAEL,oBAAoB;IACpB,8CAA8C;IAC9C,4CAA4C;IAC5C,wBAAwB;IACxB,MAAM;IAEN,QAAQ,CAAC,cAAc,CAAC;QAAE,QAAQ,EAAE,QAAQ;KAAE,CAAC;CAChD,CAAC","sources":["js/script.js"],"sourcesContent":["'use strict'\r\n\r\n\r\n\r\n\r\nconst swiper = new Swiper('.swiper', {\r\n  // Optional parameters\r\n  direction: 'vertical',\r\n  loop: true,\r\n\r\n  // If we need pagination\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n  },\r\n\r\n  // Navigation arrows\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n  },\r\n\r\n  // And if we need scrollbar\r\n  scrollbar: {\r\n    el: '.swiper-scrollbar',\r\n  },\r\n})\r\n\r\nconst header = document.querySelector('.header')\r\nconst nav = document.querySelector('.nav')\r\nconst navList = nav.querySelector('.nav__list')\r\nconst navHeight = nav.getBoundingClientRect().height\r\n\r\n\r\nconst stickyNav = function (entries) {\r\n  const [entry] = entries\r\n  console.log(entry);\r\n\r\n  if (!entry.isIntersecting) {nav.classList.add('sticky')\r\n  } else {\r\n    nav.classList.remove('sticky')\r\n  }\r\n}\r\n\r\nconst navObserver = new IntersectionObserver(stickyNav, {\r\n  root: null,\r\n  threshold: 0,\r\n  rootMargin: `-${navHeight}px`,\r\n})\r\n\r\nnavObserver.observe(nav)\r\n\r\nbtnScrollTo.addEventListener('click', function (e) {\r\n  const s1coords = section1.getBoundingClientRect()\r\n  console.log(s1coords)\r\n\r\n  console.log(e.target.getBoundingClientRect())\r\n\r\n  console.log('Current scroll (X/Y)', window.pageXOffset, window.pageYOffset)\r\n\r\n  console.log(\r\n    'height/width viewport',\r\n    document.documentElement.clientHeight,\r\n    document.documentElement.clientWidth\r\n  )\r\n\r\n  // Scrolling\r\n  // window.scrollTo(\r\n  //   s1coords.left + window.pageXOffset,\r\n  //   s1coords.top + window.pageYOffset\r\n  // );\r\n\r\n  // window.scrollTo({\r\n  //   left: s1coords.left + window.pageXOffset,\r\n  //   top: s1coords.top + window.pageYOffset,\r\n  //   behavior: 'smooth',\r\n  // });\r\n\r\n  section1.scrollIntoView({ behavior: 'smooth' })\r\n})\r\n"],"names":[],"version":3,"file":"index.1c974c2f.js.map","sourceRoot":"/__parcel_source_root/"}